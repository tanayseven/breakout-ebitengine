# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libasound2-dev libgl1-mesa-dev libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.20'


    - name: Test
      run: go test -v ./...

    - name: Build
      run: go build -v ./...
  
  build-linux-and-web:
    needs: [test-and-build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libasound2-dev libgl1-mesa-dev libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.20'

    - name: Build
      run: ./build-all-posix.sh

    - name: Upload linux build artifact
      id: upload_linux_artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-linux
        path: ./build/breakout-linux

    - name: Upload web build artifact
      id: upload_web_artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-web-wasm
        path: ./build/breakout-web-wasm.zip

  build-windows:
    needs: [test-and-build]
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.20'

    - name: Build
      run: go build -o build/breakout-windows.exe .

    - name: Upload windows build artifact
      id: upload_windows_artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-windows
        path: ./build/breakout-windows.exe

  build-macos-intel:
    needs: [test-and-build]
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'

      - name: Install xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Check if C Compiler is installed
        run: clang --version

      - name: Build
        run: ./build-all-posix.sh

      - name: Upload macos-intel build artifact
        id: upload_macos_intel_artifacts
        uses: actions/upload-artifact@v4
        with:
            name: build-macos-intel
            path: ./build/breakout-macos-intel

  build-macos-apple-silicon:
    needs: [test-and-build]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'

      - name: Install xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Check if C Compiler is installed
        run: clang --version

      - name: Build
        run: ./build-all-posix.sh

      - name: Upload macos-arm build artifact
        id: upload_macos_arm_artifacts
        uses: actions/upload-artifact@v4
        with:
            name: build-macos-apple-silicon
            path: ./build/breakout-macos-apple-silicon

  release:
    needs: [build-linux-and-web, build-windows, build-macos-intel, build-macos-apple-silicon]
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Delete old release
        id: delete_release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh auth status
          gh release delete latest || true

      - name: Download breakout-linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-linux
          path: ./build/
          merge-multiple: true

      - name: Download breakout-web-wasm artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-web-wasm
          path: ./build/
          merge-multiple: true

      - name: Download breakout-windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-windows
          path: ./build/
          merge-multiple: true

      - name: Download breakout-macos-intel artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-macos-intel
          path: ./build/
          merge-multiple: true

      - name: Download breakout-macos-apple-silicon artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-macos-apple-silicon
          path: ./build/
          merge-multiple: true

      - name: Show all downloaded artifacts
        run: ls -R

      - name: Create new release
        id: create_release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh auth status
          gh release create latest --title "Breakout - latest" --notes "Find the latest release of breakout that matches your platform"
          gh release upload latest ./build/breakout-linux
          gh release upload latest ./build/breakout-web-wasm.zip
          gh release upload latest ./build/breakout-windows.exe
          gh release upload latest ./build/breakout-macos-intel
          gh release upload latest ./build/breakout-macos-apple-silicon
          gh release view latest
          gh release edit latest --draft=false

      - name: Download Butler to release to Itch.io
        run: |
          curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
          unzip butler.zip
          chmod +x butler
          ./butler -V

      - name: Release to Itch.io
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
          ITCHIO_USER: tanayseven
          ITCHIO_GAME: breakout-ebitengine
        run: |
          ./butler login
          ./butler push ./build/breakout-linux ${ITCHIO_USER}/${ITCHIO_GAME}:linux --if-changed --userversion=latest
          ./check-if-deployed.sh ${ITCHIO_USER}/${ITCHIO_GAME}:linux
          unzip ./build/breakout-web-wasm.zip -d ./build/breakout-web-wasm
          ./butler push ./build/breakout-web-wasm/public ${ITCHIO_USER}/${ITCHIO_GAME}:html --if-changed --userversion=latest
          ./check-if-deployed.sh ${ITCHIO_USER}/${ITCHIO_GAME}:html
          ./butler push ./build/breakout-windows.exe ${ITCHIO_USER}/${ITCHIO_GAME}:windows --if-changed --userversion=latest
          ./check-if-deployed.sh ${ITCHIO_USER}/${ITCHIO_GAME}:windows
          ./butler push ./build/breakout-macos-intel ${ITCHIO_USER}/${ITCHIO_GAME}:osx --if-changed --userversion=latest
          ./check-if-deployed.sh ${ITCHIO_USER}/${ITCHIO_GAME}:osx
          ./butler push ./build/breakout-macos-apple-silicon ${ITCHIO_USER}/${ITCHIO_GAME}:osx --if-changed --userversion=latest
          ./check-if-deployed.sh ${ITCHIO_USER}/${ITCHIO_GAME}:osx
